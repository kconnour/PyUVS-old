Folders
- Dashboard
- Database
- Files
- Projections
- Science week
- Spice

Files

Files
get_abs_path_of_filenames_containing_pattern

IUVSFiles
Check file contains “mvn_iuv”

Database(IUVSFiles)
Read in database headers

IUVSDataFiles(IUVSFiles)
Get version number, e.g. (“v13” not “13”)
Get revision number (“r01” or “s01”)
Determine if file has geometry (check pixel_vec) (list of booleans)
Check if file is single integration (I’m assuming that would return a list of tuples whereas this could return a list of booleans)
Determine if all files contain geometry (single boolean) (only applies to l1a and l1b)’
Number of files

L1bFiles(IUVSDataFiles)
Determine if file was relay swath --- probably only apoapse and our method doesn’t work for l1a
Determine if all files are relay swaths* 
Determine if file was beta angled flipped* 
We should talk with Justin about this. I once asked him about beta-flipping, and he suggested it was really better to think of it as whether or not the large keyhole was in the ram direction or something. I will take on the responsibility of asking him about this.

SingleSegment
No constructor; only contains methods
Determine swath number
Get fractional illumination (of the on-disk pixels, how many were at SZA<=90?)
Attribute: segment start time
Attribute: segment end time

SingleOrbitL1bFiles(L1bFiles, SingleSegment)
I think this is the way to go. All methods are organized in the proper classes and by adding a SingleOrbit class, we never have to repeat methods. 
SingleOrbitL1bFiles is fundamentally cleaner to me than SingleOrbit(level=’l1b’). 
It’s just more readable to me
I can ensure I’m making a class whereas I cannot do so if level=’l1g’ for example. 
Plus, if I do junk = SingleOrbit(level=’l1b’) and later do type(junk), it’ll return “SingleOrbit” instead of SingleOrbitL1bFiles---so I lose info about what methods I should expect in the name alone
However, if you want that functionality, it’s then easy enough to make a function that takes “level” as an input and returns the proper class. I’m thinking np.linspace is a good analogy---it’s a function that makes an object for you by handling some of the details you may not care about. 

SingleOrbitL1cFiles(L1cFiles, SingleOrbit)


* = I don’t know about l1c files… is this info specific to l1b files? If not let’s move it up a level

Delete, or make into a separate class:
Get data (“primary”) dimensions (I don’t think this should be here)
Get detector voltage setting* (I take it back, I think this shouldn’t be in here)
Calculate DN-to-kR calibration curve array (same shape as detector, n_spatial by n_spectral) (remove this too)
Get DDS structure (what is this?)
Get SZA* (I don’t think this should be in here. This is something you can retrieve yourself out of the file after reading it with a FITS reader. No need to return it alone, otherwise we’d have to make methods to return everything contained in a FITS file)
Get emission angles* (same here)
Get phase angles* (same here)
Get wavelengths used* (same here)
Flatfield correct primary (how about produce a flatfield, but not do the correction, just “return” it)
Determine if file was dayside or nightside*
I think we should just use the voltage return, not make a judgment about day or night side. Sometimes they think they are on the dayside but aren’t, and vice-versa. So let’s let the user decide later, based on the voltage, whether or not it’s day or night side. (I’m not so sure, I guess we can discuss. I think letting the user make choices that contradict the engineering team could possibly go astray.) Ok, but if you look at the voltages used over the mission, they vary a lot. There’s like...I dunno...12 different voltage settings, and they aren’t exactly “clustered” in such a way that one set is obviously dayside and one set is obviously nightside. Maybe another place to consult with Justin.


Spice
Unsure, but I may leave it to Mike to do this

Database
Database
Get Mars year, Ls, Sol, Earth year, Earth month, Earth day, Earth UTC, lat/lon/alt,distance,subsolar lat, subsolar lon, sza, from spice
Get number of files, number of swaths, dayside files, binning, relay swath, all relays, beta flip in the SingleOrbitL1bFiles
Get science week from ScienceWeek
Add helper methods to query database---useful for dashboard. 



MIssion operations
ScienceWeek
get_science_week(date)
get_today_science_week()
get_science_week_date_range(week_number)


Projection
Projection
Setup plot (rc params, figsize, etc.)
Quicklook (Projection)
Only knows how to fill an ax with a quicklook
StandardProductQuicklook(Quicklook)
Makes the default quicklook imaging product
Globe (projection)
Makes a globe

Unsorted



